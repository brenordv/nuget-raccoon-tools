name: Publish

on:
  push:
    branches:
      - deploy-pipelines

jobs:
  test-code:
    uses: ./.github/workflows/dotnet-build-and-test.yml
    with:
      project-path: './src/Raccoon.Ninja.Tools.sln'
      
    
#  sonarcloud-analysis:
#    uses: brenordv/github-workflows/.github/workflows/template-qa-sonarcloud.yml@master
#    with:
#      projectKey: 'brenordv_nuget-raccoon-tools'
#      organization: 'raccoon-ninja'
#      verbose: true
#      sonarExclusions: 'src/Raccoon.Ninja.Tools.*.Tests/**/*'
#      coverageExclusions: 'src/Raccoon.Ninja.Tools.*.Tests/**/*'
#      projectOrSolution: './src/'
#
#    secrets:
#      githubToken: ${{ secrets.GITHUB_TOKEN }}
#      sonarToken: ${{ secrets.SONAR_TOKEN }}

  create-release:
    needs: [test-code]
    uses:  ./.github/workflows/process-release-version.yml
    with:
        projectFolder: 'src/Raccoon.Ninja.Tools'
        projectFile: 'Raccoon.Ninja.Tools.csproj'
        versionPattern: 'AssemblyVersion\("(.*)"\)'
        csprojTag: 'Version'
        releaseFilePrefix: 'Raccoon.Ninja.Tools'

#  publish:
#    needs: [sonarcloud-analysis, create-release]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up .NET
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: '8.0.x' # Use the version your project targets
#
#      - name: Install dependencies
#        run: dotnet restore
#
#      - name: Build the project
#        run: dotnet build --configuration Release --no-restore
#
#      - name: Create the NuGet package
#        run: dotnet pack --configuration Release --no-build --output ./nupkg
#
#      - name: Publish to GitHub Packages
#        run: |
#          dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
#          dotnet nuget push ./nupkg/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Publish to NuGet.org
#        if: github.ref == 'refs/heads/master'
#        run: dotnet nuget push ./nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
#
#    secrets:
#      githubToken: ${{ secrets.GITHUB_TOKEN }}
#      sonarToken: ${{ secrets.NUGET_API_KEY }}
name: Publish

on:
  push:
    branches:
      - deploy-pipelines

jobs:
  test-code:
    uses: brenordv/github-workflows/.github/workflows/template-build-and-test-dotnet.yml@v1
    with:
      projectOrSolutionPath: './src/Raccoon.Ninja.Tools.sln'

#  sonarcloud-analysis:
#    uses: brenordv/github-workflows/.github/workflows/template-qa-sonarcloud.yml@v1
#    with:
#      projectKey: 'brenordv_nuget-raccoon-tools'
#      organization: 'raccoon-ninja'
#      verbose: true
#      sonarExclusions: 'src/Raccoon.Ninja.Tools.*.Tests/**/*'
#      coverageExclusions: 'src/Raccoon.Ninja.Tools.*.Tests/**/*'
#      projectOrSolution: './src/'
#
#    secrets:
#      githubToken: ${{ secrets.GITHUB_TOKEN }}
#      sonarToken: ${{ secrets.SONAR_TOKEN }}

  create-release:
    needs: [test-code]

    permissions:
      deployments: write
      contents: write

    secrets:
      githubToken: ${{ secrets.GITHUB_TOKEN }}

    uses: brenordv/github-workflows/.github/workflows/template-create-release-and-artifacts.yml@v1
    with:
        projectPath: './src/Raccoon.Ninja.Tools'
        projectFile: 'Raccoon.Ninja.Tools.csproj'
        csprojTag: 'Version'
        releaseFilePrefix: 'Raccoon.Ninja.Tools'
        isNugetPackage: true

  publish:
    #needs: [sonarcloud-analysis, create-release] # TODO: restore this after finished creating this job.
    needs: [create-release]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Use the version your project targets

      - name: Install dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Create the NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet nuget push ./nupkg/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
